import React from 'react';
import DomainsDropDown from './domainsDropDown';


export default function ShortUrlList({ copyToClipboard }) {
  const [shortUrls, setShortUrls] = React.useState([]);
  const [domains, setDomains] = React.useState([]);
  const [checkedDomains, setCheckedDomains] = React.useState('');
  const [page, setPage] = React.useState(1);
  const [lastPage, setLastPage] = React.useState(0);
  const [loading, setLoading] = React.useState(false);

  React.useEffect(() => {
    setLoading(true);
    
    const fetchData = async () => {
      await fetch(`<%= Rails.application.routes.url_helpers.short_urls_path(format: "json") %>?page=${page}&domains=${checkedDomains}`)
      .then(response => response.json())
      .then(({ pagination: { last_page }, short_urls }) => {
        setShortUrls(short_urls);
        setLastPage(last_page);
      }).finally(() => {
        setLoading(false);
      });
    };

    const timer = setTimeout(() => {
      fetchData();
    }, 350);

    return () => clearTimeout(timer);
  }, [checkedDomains, page]);

  const filterByDomains = () => {
    setPage(1);
    setCheckedDomains(domains.filter(({ checked }) => checked).map(({ id }) => id).join(','));
  };

  return (
    <div>
      <DomainsDropDown 
        domains={domains} 
        setDomains={setDomains} 
        filterByDomains={filterByDomains}
      />

      <table>
        <thead>
          <tr>
            <th>URL</th>
            <th className="right-align">Código corto</th>
          </tr>
        </thead>
        
        <tbody>
          {loading && 
            <tr>
              <td colspan="2">
                <div className="row center-align">
                  <div className="preloader-wrapper big active">
                    <div className="spinner-layer spinner-blue-only">
                      <div className="circle-clipper left">
                        <div className="circle"></div>
                      </div>
                      <div className="gap-patch">
                        <div className="circle"></div>
                      </div>
                      <div className="circle-clipper right">
                        <div className="circle"></div>
                      </div>
                    </div>
                  </div>
                </div>
              </td>
            </tr>
          }
          {!loading && shortUrls.map(({ url, short_code, short_url, visits, alexa_rank }, i) =>
            <tr key={i}>
              <td>
                <a href={url} target="_blank">{url}</a>
                <p>Visitas: {visits}</p>
                {alexa_rank &&
                  <p>Ranking de alexa: {alexa_rank}</p>
                }
              </td>
              <td className="right-align">
                {short_code}
                <a className="copy-icon" onClick={() => copyToClipboard(short_url)}>
                  <i className="material-icons">content_copy</i>
                </a>
              </td>
            </tr>
          )}
        </tbody>

        <tfoot>
          <tr>
            <td colspan="2" className="right-align">
              <ul className="pagination">
                <li className={page === 1 && 'disabled'}>
                  <a onClick={() => page !== 1 && setPage(1)}>
                    <i className="material-icons">first_page</i>
                  </a>
                </li>
                <li className={page === 1 && 'disabled'}>
                  <a onClick={() => page !== 1 && setPage(page - 1)}>
                    <i className="material-icons">chevron_left</i>
                  </a>
                </li>
                <li className={page === lastPage && 'disabled'}>
                  <a onClick={() => page !== lastPage && setPage(page + 1)}>
                    <i className="material-icons">chevron_right</i>
                  </a>
                </li>
                <li className={page === lastPage && 'disabled'}>
                  <a onClick={() => page !== lastPage && setPage(lastPage)}>
                    <i className="material-icons">last_page</i>
                  </a>
                </li>
              </ul>
              <p>Página {page} de {lastPage}</p>
            </td>
          </tr>
        </tfoot>
      </table>
    </div>
  );
}
