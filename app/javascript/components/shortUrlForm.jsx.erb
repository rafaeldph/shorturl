import React from 'react';


export default function ShortUrlForm({ copyToClipboard }) {
  const [url, setUrl] = React.useState('');
  const [error, setError] = React.useState('');
  const [shortCode, setShortCode] = React.useState('');
  const [shortUrl, setShortUrl] = React.useState('');
  const [alexaRank, setAlexaRank] = React.useState('');
  const [loading, setLoading] = React.useState(false);

  React.useEffect(() => {
    setShortCode('');
    setAlexaRank('');
    setError('');
  }, [url]);

  const sendForm = () => {
    setLoading(true);
    
    fetch('<%= Rails.application.routes.url_helpers.short_urls_path(format: "json") %>', {
      method: 'POST',
      body: JSON.stringify({
        short_url: {
          url,
        },
      }),
    }).then(response => response.json()).then(({ error, short_code, short_url, alexa_rank }) => {
      if (error) {
        setError(error);
      } else {
        setShortCode(short_code);
        setShortUrl(short_url);
        setAlexaRank(alexa_rank);
      }
    }).finally(() => {
      setLoading(false);
    });
  };

  return (
    <form className="row valign-wrapper">
      <div className="input-field col s6 m3">
        <input 
          placeholder="URL" 
          id="url" 
          type="text" 
          className="validate" 
          value={url} 
          onChange={({ target: { value } }) => setUrl(value)} 
        />
      </div>
      {loading ? (
        <div className="col s12 m6 center-align">
          <div className="preloader-wrapper small active">
            <div className="spinner-layer spinner-blue-only">
              <div className="circle-clipper left">
                <div className="circle"></div>
              </div>
              <div className="gap-patch">
                <div className="circle"></div>
              </div>
              <div className="circle-clipper right">
                <div className="circle"></div>
              </div>
            </div>
          </div>
        </div>
      ) : (
        <>
          <div className="col s6 m3">
            {error &&
              <p className="text-error">{error}</p>
            }
            {shortCode &&
              <p>
                {shortCode} 
                <a className="copy-icon" onClick={() => copyToClipboard(shortUrl)}>
                  <i className="material-icons">content_copy</i>
                </a>
              </p>
            }
          </div>
          <div className="col s6 m3">
            {alexaRank && 
              <p><b>Ranking de alexa:</b> {alexaRank}</p>
            }
          </div>
        </>
      )}
      <div className="col s6 m3 right-align">
        <button type="button" className="btn waves-effect waves-light" onClick={sendForm}>Generar</button>
      </div>
    </form>
  );
}
